name: Upload Python Package to PyPI

on:
  push:
    branches:
      - main

jobs:
  publish:
    runs-on: ubuntu-latest

    steps:
      - name: Check out code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0 # Ensure full git history for version bumping

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.x"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install build twine bump-my-version

      - name: Determine bump type from commit message
        id: bump
        run: |
          git log -1 --pretty=%B > commit_msg.txt
          if grep -iq "#major" commit_msg.txt; then
            echo "bump=major" >> $GITHUB_OUTPUT
          elif grep -iq "#minor" commit_msg.txt; then
            echo "bump=minor" >> $GITHUB_OUTPUT
          else
            echo "bump=patch" >> $GITHUB_OUTPUT
          fi

      - name: Configure git identity
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"

      - name: Bump version
        run: bump-my-version bump ${{ steps.bump.outputs.bump }}

      - name: Commit and push version bump
        run: |
          git add pyproject.toml
          git commit -m "ci: bump version automatically [skip ci]"
          git push

      - name: Clean old builds
        run: rm -rf dist/

      - name: Build package
        run: python -m build

      - name: Publish package to PyPI
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
        run: python -m twine upload dist/*
